<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0/EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="auction.guad.mapper.MemberMapper">
	<!-- 관리자용 모든 멤버 pass 제외하고 목록 조회 -->
	<!-- 모든 회원 조회 -->
	<select id="managerSelectMemberListExceptPass" resultType="auction.guad.dto.MemberDto">
		SELECT MEMBER_NUM, NICKNAME, EMAIL, PHONE, ADDRESS, JOIN_DATE_TIME, GENDER, MILEAGE, MILEAGE_USED, MANAGER_YN, DELETED_YN, UPDATED_DATE_TIME 
		FROM MEMBER
	</select>
	
	<!-- 관리자용 모든 멤버 pass 제외하고 목록 조회 -->
	<!-- 삭제된 멤버만 조회 -->
	<select id="managerSelectMemberListExceptPassAndDeleted" resultType="auction.guad.dto.MemberDto">
		SELECT MEMBER_NUM, NICKNAME, EMAIL, PHONE, ADDRESS, JOIN_DATE_TIME, GENDER, MILEAGE, MILEAGE_USED, MANAGER_YN, DELETED_YN, UPDATED_DATE_TIME 
		FROM MEMBER
		WHERE DELETED_YN='y'
	</select>

	<!-- 관리자용 모든 멤버 pass 제외하고 목록 조회 -->
	<!-- 상세조회 -->
	<select id="managerSelectMemberDetailByEmail" resultType="auction.guad.dto.MemberDto">
		SELECT MEMBER_NUM, NICKNAME, EMAIL, PHONE, ADDRESS, JOIN_DATE_TIME, GENDER, MILEAGE, MILEAGE_USED, MANAGER_YN, DELETED_YN, UPDATED_DATE_TIME 
		FROM MEMBER
		WHERE EMAIL=#{email}
	</select>
	
	<!-- 로그인용, 비밀번호까지 조회 -->
	<select id="loginContainPass" resultType="auction.guad.dto.MemberDto">
		SELECT * 
		FROM MEMBER
		WHERE EMAIL=#{email}
	</select>
	
	<!-- 회원 상세 조회 -->
	<select id="selectMemberDetailByEmail" parameterType="String" resultType="auction.guad.dto.MemberDto">
		SELECT NICKNAME, EMAIL, ADDRESS, MILEAGE, MILEAGE_USED
		FROM MEMBER
		WHERE EMAIL = #{email}
	</select>

	<!-- 회원가입 -->
	<insert id="insertMember" parameterType="auction.guad.dto.MemberDto">
		INSERT INTO MEMBER(NICKNAME, PASS, EMAIL, PHONE, ADDRESS, GENDER, JOIN_DATE_TIME) 
			VALUES (#{nickname}, #{pass}, #{email}, #{phone}, #{address}, #{gender}, now())
		<selectKey keyProperty="memberNum" resultType="Integer">
        	select last_insert_id()
    	</selectKey>
	</insert>
	
	
	<!-- 회원 정보 수정 -->
	<!-- 컨트롤러/서비스에서 db비번 = 기존비번 확인하고 일치하면 new비번을 db에 업데이트-->
	<update id="updateMemberByEmail" parameterType="auction.guad.dto.MemberDto">
		UPDATE MEMBER SET ADDRESS = #{address}, PASS = #{pass}
		WHERE EMAIL = #{email}
	</update>
	
	<!-- 회원 삭제 업데이트 -->
	<update id="deleteMemberByEmail" parameterType="auction.guad.dto.MemberDto">
		UPDATE MEMBER SET DELETE_YN = "y"
		WHERE EMAIL = #{email} AND PASS = #{pass}
	</update>
	
	<!-- 아이디 중복 확인용 쿼리 -->
	<select id="repetitionEmailCheck">
		SELECT COUNT(*) FROM MEMBER
		WHERE EMAIL = #{email}
	</select>
	
	<!-- 닉네임 중복 확인 쿼리 -->
	<select id="repetitionNicknameCheck">
		SELECT COUNT(*) FROM MEMBER
		WHERE NICKNAME = #{nickname}
	</select>
	
</mapper>